{"ast":null,"code":"var _jsxFileName = \"/Users/anne/Documents/Dev/x-mind note/React/React\\u7B14\\u8BB0\\u793A\\u8303\\u4EE3\\u7801/to-do-list/src/TodoItem.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props); // 为了优化性能，原因不敏\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    const {\n      content\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      // 子组件接收父组件传值后，不自己建立方法再使用也可以，可以直接用父组件传来的防范\n      // 接受参数要用立即执行函数\n      // onClick={() => this.props.deleteItem(this.props.index).bind(this)}\n      onClick: this.handleClick,\n      dangerouslySetInnerHTML: {\n        __html: content\n      }\n    }, this.props.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleClick() {\n    const {\n      deleteItem,\n      index\n    } = this.props;\n    deleteItem(index);\n  }\n\n}\n\nexport default TodoItem;","map":{"version":3,"sources":["/Users/anne/Documents/Dev/x-mind note/React/React笔记示范代码/to-do-list/src/TodoItem.js"],"names":["React","Component","TodoItem","constructor","props","handleClick","bind","render","content","__html","index","deleteItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKJ,KAAzB;AACA,wBACE;AAEE;AACA;AACA;AACA,MAAA,OAAO,EAAE,KAAKC,WALhB;AAME,MAAA,uBAAuB,EAAE;AAAEI,QAAAA,MAAM,EAAED;AAAV;AAN3B,OACO,KAAKJ,KAAL,CAAWM,KADlB;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AACDL,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEM,MAAAA,UAAF;AAAcD,MAAAA;AAAd,QAAwB,KAAKN,KAAnC;AACAO,IAAAA,UAAU,CAACD,KAAD,CAAV;AACD;;AAtB8B;;AAyBjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n    // 为了优化性能，原因不敏\n    this.handleClick = this.handleClick.bind(this);\n  }\n  render() {\n    const { content } = this.props;\n    return (\n      <div\n        key={this.props.index}\n        // 子组件接收父组件传值后，不自己建立方法再使用也可以，可以直接用父组件传来的防范\n        // 接受参数要用立即执行函数\n        // onClick={() => this.props.deleteItem(this.props.index).bind(this)}\n        onClick={this.handleClick}\n        dangerouslySetInnerHTML={{ __html: content }}\n      ></div>\n    );\n  }\n  handleClick() {\n    const { deleteItem, index } = this.props;\n    deleteItem(index);\n  }\n}\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}